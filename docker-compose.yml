version: '3'

services:
  flask_backend:
        build: 
          context: ./flask_backend/
          dockerfile: Dockerfile_flask
        volumes: 
            - ./flask_backend/:/usr/src/app/
        ports: 
            - 5000:5000
        depends_on:
          - rabbitmq
        environment: 
            PORT: 5000
            FLASK_DEBUG: 1
            PYTHONUNBUFFERED: 1
        restart: unless-stopped
        networks:
          - app-network
  rmq_client:
        build: 
          context: ./flask_backend/rmq_app
          dockerfile: Dockerfile_RMQ
        volumes: 
            - ./flask_backend/rmq_app/:/usr/src/app/
        ports: 
            - 5001:5001
        depends_on:
          - rabbitmq
        environment: 
            PORT: 5001
            FLASK_DEBUG: 1
            PYTHONUNBUFFERED: 1
        restart: unless-stopped
        networks:
          - app-network
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "3000:3000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
  db:
    image: andresvidal/rpi3-mongodb3
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

  mongo-express:
    image: ind3x/rpi-mongo-express
    container_name: mongo-express
    environment:
    - ME_CONFIG_MONGODB_SERVER=db
    - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USERNAME
    - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
    - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_USERNAME
    - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata
    depends_on:
      - db
    networks:
      - app-network
    ports:
      - 8081:8081
    restart: always

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
        - RABBITMQ_DEFAULT_USER=$RMQ_USER
        - RABBITMQ_DEFAULT_PASS=$RMQ_PASSWORD
    ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
    networks:
        - app-network
  

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
