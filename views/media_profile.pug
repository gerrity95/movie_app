extends layout

block content
  title What To Watch - Movie Profile
  include includes/success_review_modal.pug
  include includes/success_watchlist.pug
  include includes/failed_review_modal.pug
  include includes/failed_watchlist.pug
  - var media_reccs = reccomendations
  - var media_cast = media_info.castSection
  - var percent_rating = Math.round(media_info.ratingSection * 10)
  - var header_src = `https://image.tmdb.org/t/p/original/${media_info.imageSection.backdrop}`
  - var poster_src = `https://image.tmdb.org/t/p/w500/${media_info.imageSection.poster}`
  if (media_info.imageSection.poster)
    - var poster_src = `https://image.tmdb.org/t/p/w500/${media_info.imageSection.poster}`
  else
    - var poster_src = '/images/missing_image.png'
  if (is_watchlist)
    - var watchlist_title = 'Remove From Watchlist'
  else
    - var watchlist_title = 'Add To Watchlist'
  if (is_blocklist)
    - var blocklist_title = 'Remove From Blocklist'
  else
    - var blocklist_title = 'Add To Blocklist'

  .container-fluid(style=`background-image:url(${header_src})`).movie_header_image
    .row.movie_darken#movie-desktop
      .col-10.col-sm-8.col-md-5.col-lg-3.col-xl-3.offset-lg-1.offset-xl-1.offset-md-1.offset-sm-2.offset-1.align-self-center.d-flex.justify-content-center
        img(src=poster_src).movie_poster_image
      .col-10.col-sm-8.col-md-5.col-lg-7.col-xl-7.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-2.offset-1.align-self-center
        .c100.p0.blue
          span #{percent_rating}%
          .slice
            .bar
            .fill
        h2.movie_text
          | #{media_info.titleSection}
        for genre in media_info.genreSection
          h5.movie_text(style="display: inline")
            |  #{genre.name},
        p.movie_text
          br
          | #{media_info.taglineSection}
        
        .social-icons
          a#watchlist_button_normal.social-icon.social-icon--codepen
            i.far.fa-bookmark.fa-stack-1x(style="color: white")
            .tooltip#watchlist_todo #{watchlist_title}
          a#blocklist_button_normal.social-icon.social-icon--codepen
            i.far.fa-trash-alt.fa-stack-1x(style="color: white")
            .tooltip#blocklist_todo #{blocklist_title}

        table.table.table-borderless.movie_text
          thead
            tr
              th(style="width: 25%") Date
              th(style="width: 25%") Runtime
          tbody
            tr
              td #{media_info.releaseSection}
              td #{media_info.runtimeSection}
        
        table.table.table-borderless.movie_text
          thead
            tr
              th(style="width: 25%") Director / Creator
              th(style="width: 25%") #{media_info.statusWriterSection.title}
          tbody
            tr
              td #{media_info.directorSection}
              td #{media_info.statusWriterSection.value}
    
    .row.movie_darken#movie-mobile
      .col-6.col-sm-6.col-md-5.col-lg-3.col-xl-3.offset-lg-1.offset-xl-1.offset-md-1.offset-sm-0.offset-0.align-self-center.d-flex.justify-content-center
        img(src=poster_src).movie_poster_image
      .col-5.col-sm-5.col-md-5.col-lg-7.col-xl-7.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-0.offset-0.align-self-center
        .c100.p0.blue
          span #{percent_rating}%
          .slice
            .bar
            .fill
      .col-12.col-sm-10.col-md-5.col-lg-7.col-xl-7.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-1.offset-0.align-self-center
        h2.movie_text
          | #{media_info.titleSection}
        for genre in media_info.genreSection
          h5.movie_text(style="display: inline")
            |  #{genre.name},
        p.movie_text
          br
          | #{media_info.taglineSection}
        
        .social-icons
          a#watchlist_button_mobile.social-icon.social-icon--codepen
            i.far.fa-bookmark.fa-stack-1x(style="color: white")
            .tooltip#watchlist_todo_mobile #{watchlist_title}
          a#blocklist_button_mobile.social-icon.social-icon--codepen
            i.far.fa-trash-alt.fa-stack-1x(style="color: white")
            .tooltip#blocklist_todo_modile #{blocklist_title}

        table.table.table-borderless.movie_text
          thead
            tr
              th(style="width: 25%") Release Date
              th(style="width: 25%") Runtime
          tbody
            tr
              td #{media_info.releaseSection}
              td #{media_info.runtimeSection}
        table.table.table-borderless.movie_text
          thead
            tr
              th(style="width: 25%") Director
              th(style="width: 25%") #{media_info.statusWriterSection.title}
          tbody
            tr
              td #{media_info.directorSection}
              td #{media_info.statusWriterSection.value}

  .container-fluid.movie_interact_container
    .row.movie_interact_box
      .col-12.col-sm-8.col-md-6.col-lg-6.col-xl-4.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-2.offset-0.align-self-center.rating_column
        .feedback
          h5 Submit Rating
          .rating
            input#rating-10(type='radio' name='rating' value="10")
            label(for='rating-10')
            input#rating-9(type='radio' name='rating' value="9")
            label(for='rating-9')
            input#rating-8(type='radio' name='rating' value="8")
            label(for='rating-8')
            input#rating-7(type='radio' name='rating' value="7")
            label(for='rating-7')
            input#rating-6(type='radio' name='rating' value="6")
            label(for='rating-6')
            input#rating-5(type='radio' name='rating' value="5")
            label(for='rating-5')
            input#rating-4(type='radio' name='rating' value="4")
            label(for='rating-4')
            input#rating-3(type='radio' name='rating' value="3")
            label(for='rating-3')
            input#rating-2(type='radio' name='rating' value="2")
            label(for='rating-2')
            input#rating-1(type='radio' name='rating' value="1")
            label(for='rating-1')
            .emoji-wrapper
              .emoji
                svg.rating-0(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    circle(cx='256' cy='256' r='256' fill='#ffd93b')
                    path(d='M512 256c0 141.44-114.64 256-256 256-80.48 0-152.32-37.12-199.28-95.28 43.92 35.52 99.84 56.72 160.72 56.72 141.36 0 256-114.56 256-256 0-60.88-21.2-116.8-56.72-160.72C474.8 103.68 512 175.52 512 256z' fill='#f4c534')
                    ellipse(transform='scale(-1) rotate(31.21 715.433 -595.455)' cx='166.318' cy='199.829' rx='56.146' ry='56.13' fill='#fff')
                    ellipse(transform='rotate(-148.804 180.87 175.82)' cx='180.871' cy='175.822' rx='28.048' ry='28.08' fill='#3e4347')
                    ellipse(transform='rotate(-113.778 194.434 165.995)' cx='194.433' cy='165.993' rx='8.016' ry='5.296' fill='#5a5f63')
                    ellipse(transform='scale(-1) rotate(31.21 715.397 -1237.664)' cx='345.695' cy='199.819' rx='56.146' ry='56.13' fill='#fff')
                    ellipse(transform='rotate(-148.804 360.25 175.837)' cx='360.252' cy='175.84' rx='28.048' ry='28.08' fill='#3e4347')
                    ellipse(transform='scale(-1) rotate(66.227 254.508 -573.138)' cx='373.794' cy='165.987' rx='8.016' ry='5.296' fill='#5a5f63')
                    path(d='M370.56 344.4c0 7.696-6.224 13.92-13.92 13.92H155.36c-7.616 0-13.92-6.224-13.92-13.92s6.304-13.92 13.92-13.92h201.296c7.696.016 13.904 6.224 13.904 13.92z' fill='#3e4347')
                svg.rating-1(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    circle(cx='256' cy='256' r='256' fill='#ffd93b')
                    path(d='M512 256A256 256 0 0 1 56.7 416.7a256 256 0 0 0 360-360c58.1 47 95.3 118.8 95.3 199.3z' fill='#f4c534')
                    path(d='M328.4 428a92.8 92.8 0 0 0-145-.1 6.8 6.8 0 0 1-12-5.8 86.6 86.6 0 0 1 84.5-69 86.6 86.6 0 0 1 84.7 69.8c1.3 6.9-7.7 10.6-12.2 5.1z' fill='#3e4347')
                    path(d='M269.2 222.3c5.3 62.8 52 113.9 104.8 113.9 52.3 0 90.8-51.1 85.6-113.9-2-25-10.8-47.9-23.7-66.7-4.1-6.1-12.2-8-18.5-4.2a111.8 111.8 0 0 1-60.1 16.2c-22.8 0-42.1-5.6-57.8-14.8-6.8-4-15.4-1.5-18.9 5.4-9 18.2-13.2 40.3-11.4 64.1z' fill='#f4c534')
                    path(d='M357 189.5c25.8 0 47-7.1 63.7-18.7 10 14.6 17 32.1 18.7 51.6 4 49.6-26.1 89.7-67.5 89.7-41.6 0-78.4-40.1-82.5-89.7A95 95 0 0 1 298 174c16 9.7 35.6 15.5 59 15.5z' fill='#fff')
                    path(d='M396.2 246.1a38.5 38.5 0 0 1-38.7 38.6 38.5 38.5 0 0 1-38.6-38.6 38.6 38.6 0 1 1 77.3 0z' fill='#3e4347')
                    path(d='M380.4 241.1c-3.2 3.2-9.9 1.7-14.9-3.2-4.8-4.8-6.2-11.5-3-14.7 3.3-3.4 10-2 14.9 2.9 4.9 5 6.4 11.7 3 15z' fill='#fff')
                    path(d='M242.8 222.3c-5.3 62.8-52 113.9-104.8 113.9-52.3 0-90.8-51.1-85.6-113.9 2-25 10.8-47.9 23.7-66.7 4.1-6.1 12.2-8 18.5-4.2 16.2 10.1 36.2 16.2 60.1 16.2 22.8 0 42.1-5.6 57.8-14.8 6.8-4 15.4-1.5 18.9 5.4 9 18.2 13.2 40.3 11.4 64.1z' fill='#f4c534')
                    path(d='M155 189.5c-25.8 0-47-7.1-63.7-18.7-10 14.6-17 32.1-18.7 51.6-4 49.6 26.1 89.7 67.5 89.7 41.6 0 78.4-40.1 82.5-89.7A95 95 0 0 0 214 174c-16 9.7-35.6 15.5-59 15.5z' fill='#fff')
                    path(d='M115.8 246.1a38.5 38.5 0 0 0 38.7 38.6 38.5 38.5 0 0 0 38.6-38.6 38.6 38.6 0 1 0-77.3 0z' fill='#3e4347')
                    path(d='M131.6 241.1c3.2 3.2 9.9 1.7 14.9-3.2 4.8-4.8 6.2-11.5 3-14.7-3.3-3.4-10-2-14.9 2.9-4.9 5-6.4 11.7-3 15z' fill='#fff')
                svg.rating-2(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    circle(cx='256' cy='256' r='256' fill='#ffd93b')
                    path(d='M512 256A256 256 0 0 1 56.7 416.7a256 256 0 0 0 360-360c58.1 47 95.3 118.8 95.3 199.3z' fill='#f4c534')
                    path(d='M336.6 403.2c-6.5 8-16 10-25.5 5.2a117.6 117.6 0 0 0-110.2 0c-9.4 4.9-19 3.3-25.6-4.6-6.5-7.7-4.7-21.1 8.4-28 45.1-24 99.5-24 144.6 0 13 7 14.8 19.7 8.3 27.4z' fill='#3e4347')
                    path(d='M276.6 244.3a79.3 79.3 0 1 1 158.8 0 79.5 79.5 0 1 1-158.8 0z' fill='#fff')
                    circle(cx='340' cy='260.4' r='36.2' fill='#3e4347')
                    g(fill='#fff')
                      ellipse(transform='rotate(-135 326.4 246.6)' cx='326.4' cy='246.6' rx='6.5' ry='10')
                      path(d='M231.9 244.3a79.3 79.3 0 1 0-158.8 0 79.5 79.5 0 1 0 158.8 0z')
                    circle(cx='168.5' cy='260.4' r='36.2' fill='#3e4347')
                    ellipse(transform='rotate(-135 182.1 246.7)' cx='182.1' cy='246.7' rx='10' ry='6.5' fill='#fff')
                svg.rating-3(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    circle(cx='256' cy='256' r='256' fill='#ffd93b')
                    path(d='M407.7 352.8a163.9 163.9 0 0 1-303.5 0c-2.3-5.5 1.5-12 7.5-13.2a780.8 780.8 0 0 1 288.4 0c6 1.2 9.9 7.7 7.6 13.2z' fill='#3e4347')
                    path(d='M512 256A256 256 0 0 1 56.7 416.7a256 256 0 0 0 360-360c58.1 47 95.3 118.8 95.3 199.3z' fill='#f4c534')
                    g(fill='#fff')
                      path(d='M115.3 339c18.2 29.6 75.1 32.8 143.1 32.8 67.1 0 124.2-3.2 143.2-31.6l-1.5-.6a780.6 780.6 0 0 0-284.8-.6z')
                      ellipse(cx='356.4' cy='205.3' rx='81.1' ry='81')
                    ellipse(cx='356.4' cy='205.3' rx='44.2' ry='44.2' fill='#3e4347')
                    g(fill='#fff')
                      ellipse(transform='scale(-1) rotate(45 454 -906)' cx='375.3' cy='188.1' rx='12' ry='8.1')
                      ellipse(cx='155.6' cy='205.3' rx='81.1' ry='81')
                    ellipse(cx='155.6' cy='205.3' rx='44.2' ry='44.2' fill='#3e4347')
                    ellipse(transform='scale(-1) rotate(45 454 -421.3)' cx='174.5' cy='188' rx='12' ry='8.1' fill='#fff')
                svg.rating-4(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    circle(cx='256' cy='256' r='256' fill='#ffd93b')
                    path(d='M512 256A256 256 0 0 1 56.7 416.7a256 256 0 0 0 360-360c58.1 47 95.3 118.8 95.3 199.3z' fill='#f4c534')
                    path(d='M232.3 201.3c0 49.2-74.3 94.2-74.3 94.2s-74.4-45-74.4-94.2a38 38 0 0 1 74.4-11.1 38 38 0 0 1 74.3 11.1z' fill='#e24b4b')
                    path(d='M96.1 173.3a37.7 37.7 0 0 0-12.4 28c0 49.2 74.3 94.2 74.3 94.2C80.2 229.8 95.6 175.2 96 173.3z' fill='#d03f3f')
                    path(d='M215.2 200c-3.6 3-9.8 1-13.8-4.1-4.2-5.2-4.6-11.5-1.2-14.1 3.6-2.8 9.7-.7 13.9 4.4 4 5.2 4.6 11.4 1.1 13.8z' fill='#fff')
                    path(d='M428.4 201.3c0 49.2-74.4 94.2-74.4 94.2s-74.3-45-74.3-94.2a38 38 0 0 1 74.4-11.1 38 38 0 0 1 74.3 11.1z' fill='#e24b4b')
                    path(d='M292.2 173.3a37.7 37.7 0 0 0-12.4 28c0 49.2 74.3 94.2 74.3 94.2-77.8-65.7-62.4-120.3-61.9-122.2z' fill='#d03f3f')
                    path(d='M411.3 200c-3.6 3-9.8 1-13.8-4.1-4.2-5.2-4.6-11.5-1.2-14.1 3.6-2.8 9.7-.7 13.9 4.4 4 5.2 4.6 11.4 1.1 13.8z' fill='#fff')
                    path(d='M381.7 374.1c-30.2 35.9-75.3 64.4-125.7 64.4s-95.4-28.5-125.8-64.2a17.6 17.6 0 0 1 16.5-28.7 627.7 627.7 0 0 0 218.7-.1c16.2-2.7 27 16.1 16.3 28.6z' fill='#3e4347')
                    path(d='M256 438.5c25.7 0 50-7.5 71.7-19.5-9-33.7-40.7-43.3-62.6-31.7-29.7 15.8-62.8-4.7-75.6 34.3 20.3 10.4 42.8 17 66.5 17z' fill='#e24b4b')
                svg.rating-5(xmlns='http://www.w3.org/2000/svg' viewbox='0 0 512 512')
                    g(fill='#ffd93b')
                      circle(cx='256' cy='256' r='256')
                      path(d='M512 256A256 256 0 0 1 56.8 416.7a256 256 0 0 0 360-360c58 47 95.2 118.8 95.2 199.3z')
                    path(d='M512 99.4v165.1c0 11-8.9 19.9-19.7 19.9h-187c-13 0-23.5-10.5-23.5-23.5v-21.3c0-12.9-8.9-24.8-21.6-26.7-16.2-2.5-30 10-30 25.5V261c0 13-10.5 23.5-23.5 23.5h-187A19.7 19.7 0 0 1 0 264.7V99.4c0-10.9 8.8-19.7 19.7-19.7h472.6c10.8 0 19.7 8.7 19.7 19.7z' fill='#e9eff4')
                    path(d='M204.6 138v88.2a23 23 0 0 1-23 23H58.2a23 23 0 0 1-23-23v-88.3a23 23 0 0 1 23-23h123.4a23 23 0 0 1 23 23z' fill='#45cbea')
                    path(d='M476.9 138v88.2a23 23 0 0 1-23 23H330.3a23 23 0 0 1-23-23v-88.3a23 23 0 0 1 23-23h123.4a23 23 0 0 1 23 23z' fill='#e84d88')
                    g(fill='#38c0dc')
                      path(d='M95.2 114.9l-60 60v15.2l75.2-75.2zM123.3 114.9L35.1 203v23.2c0 1.8.3 3.7.7 5.4l116.8-116.7h-29.3z')
                    g(fill='#d23f77')
                      path(d='M373.3 114.9l-66 66V196l81.3-81.2zM401.5 114.9l-94.1 94v17.3c0 3.5.8 6.8 2.2 9.8l121.1-121.1h-29.2z')
                    path(d='M329.5 395.2c0 44.7-33 81-73.4 81-40.7 0-73.5-36.3-73.5-81s32.8-81 73.5-81c40.5 0 73.4 36.3 73.4 81z' fill='#3e4347')
                    path(d='M256 476.2a70 70 0 0 0 53.3-25.5 34.6 34.6 0 0 0-58-25 34.4 34.4 0 0 0-47.8 26 69.9 69.9 0 0 0 52.6 24.5z' fill='#e24b4b')
                    path(d='M290.3 434.8c-1 3.4-5.8 5.2-11 3.9s-8.4-5.1-7.4-8.7c.8-3.3 5.7-5 10.7-3.8 5.1 1.4 8.5 5.3 7.7 8.6z' fill='#fff' opacity='.2')

          button#rating_button.submit.btn.custom_button(type="submit") Submit
    
      .col-12.col-sm-10.col-md-10.col-lg-6.col-xl-6.offset-lg-0.offset-xl-2.offset-md-1.offset-sm-2.align-self-center.rating_column
        .additional_options
          h3.title_style Overview
          p
            | #{media_info.overviewSection}
    .row.movie_interact_box

      .col-12.col-sm-8.col-md-6.col-lg-6.col-xl-6.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-2.offset-0.rating_column
        .additional_options
          h3.title_style Keywords
        .row(style="padding: 5%")
          each keyword in media_info.keywordsSection
            btn.btn.btn-outline-secondary(style="margin: 10px;")
              | #{keyword.name}
      .col-12.col-sm-10.col-md-10.col-lg-6.col-xl-6.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-2.align-self-center.rating_column
        .additional_options
          h3.title_style Where To Watch
          #missing_country
          select.selectpicker.form-control#watch_provider_country.f32(data-live-search="true" data-size="8")
          h5(style="padding-top: 15px") Streaming
          .row#streaming_movies
          h5(style="padding-top: 15px") Renting
          .row#rent_movies
          h5(style="padding-top: 15px") Purchase
          .row#buy_movies
  
    .row.movie_interact_box
      .container-fluid
        h3.title_style Similar Titles
        .scrolling-wrapper.row.flex-row.flex-nowrap.mt-4.pb-4.pt-2.no-gutters
          each media in recommendations.slice(0, 12)
            - var poster_src = `https://image.tmdb.org/t/p/w500/${media.poster_path}`
            - var percent_rating = Math.round(media.vote_average * 10)
            a.col-xl-3.col-lg-3.col-md-4.col-sm-6.col-6(style=`background-image:url(${poster_src})` href=`/media/${media.id}`).rec_movies
              .dark_background.d-flex
                .row(style='min-width: 100%')
                  .col-10.col-sm-8.col-md-5.col-lg-5.col-xl-5.offset-lg-1.offset-xl-1.offset-md-1.offset-sm-2.offset-1.align-self-center
                    .c100.p0.blue
                      span #{percent_rating}%
                      .slice
                        .bar
                        .fill
                  .col-10.col-sm-8.col-md-6.col-lg-6.col-xl-6.offset-lg-0.offset-xl-0.offset-md-1.offset-sm-2.offset-1.align-self-center
                    h4.movie_text
                      | #{media.title}
                    p.movie_text(style="display: inline")
                      |  #{media.release_date}


  #module.container-fluid
    h3.title_style
      | Top Billed Cast
    .row#collapseExample.collapse(aria-expanded='false')
      
      each val in media_cast
        .col-xl-2.col-lg-2.col-md-3.col-sm-5.col-5.offset-0.offset-sm-2.credit_details.text-center.shadow-lg
          if val.profile_path
            - var profile_src = `https://image.tmdb.org/t/p/w500/${val.profile_path}`
          else
            - var profile_src = '/images/headshot.png'
          img.lazy.card-img-top(data-src=profile_src alt='Card image cap').profile_photo
          .details
            p #{val.name}
              br
              b
                | #{val.character}
          
    a.collapsed.btn.custom_button(style="margin-top: 20px;" data-toggle='collapse' href='#collapseExample' role='button' aria-expanded='false' aria-controls='collapseExample')
      | View Cast


  script.

    var media_details = !{JSON.stringify(media_info)}; 
    var wp_countries = !{JSON.stringify(watch_provider_countries)};
    var wp_content = !{JSON.stringify(watch_providers_content)};
    var ip_info = !{JSON.stringify(ip_info)};

    // Populate watch provider dropdown
    $(document).ready(function () {
      
      for (var i = 0; i < wp_countries.length; i++) {
          if (wp_countries[i].iso_3166_1 == ip_info.body.country) {
            var default_country = wp_countries[i].english_name;
          }
          $('#watch_provider_country').append('<option class="flag ' + wp_countries[i].iso_3166_1.toLowerCase() + '" value="' + wp_countries[i].iso_3166_1 + '">' + wp_countries[i].english_name + '</option>');
      }
      if (default_country === undefined) {
        $( "#missing_country" ).append( "<p>Unfortunately we aren't able to get provider information for your country. If there is anywhere else you would like to try please select from the list below. 🙂</p>" ); 
      } else {
        console.log(default_country);
        $('#watch_provider_country').selectpicker('val', ip_info.body.country).attr("selected",true).attr("title", default_country);
    
        $('#watch_provider_country').selectpicker('refresh');

        var relevant_results = wp_content.body.results;
        
        var streamParent = document.getElementById('streaming_movies');
        var rentParent = document.getElementById('rent_movies');
        var buyParent = document.getElementById('buy_movies');
        update_providers(streamParent, rentParent, buyParent, relevant_results, ip_info.body.country, default_country);

      }

      
    });


    $("#watch_provider_country").change(function () {
      console.log(this.value);
      for (var i = 0; i < wp_countries.length; i++) {
          if (wp_countries[i].iso_3166_1 == this.value) {
            var default_country = wp_countries[i].english_name;
          }
      }

      var relevant_results = wp_content.body.results;
      
      $("#streaming_movies").empty();
      $("#rent_movies").empty();
      $("#buy_movies").empty();
      $("#missing_country").empty();
      var streamParent = document.getElementById('streaming_movies');
      var rentParent = document.getElementById('rent_movies');
      var buyParent = document.getElementById('buy_movies');
      update_providers(streamParent, rentParent, buyParent, relevant_results, this.value, default_country);

    });


    $('button[id="rating_button"]').prop("disabled", true);
    $('input[name="rating"]').on("click", function() {
      if($('input[name="rating"]:checked').length){
        $('button[id="rating_button"]').prop("disabled", false);
      }
    }); 
    const btn = document.querySelector('#rating_button');
        // handle button click
        btn.onclick = function () {
            const rbs = document.querySelectorAll('input[name="rating"]');
            let selectedValue;
            for (const rb of rbs) {
                if (rb.checked) {
                    selectedValue = rb.value;
                    break;
                }
            }
            $.ajax({
                type: "POST",
                url: '/tmdbapi/submit_rating',
                dataType: "json",
                data: {rating: selectedValue, media_id: media_details.mediaId},
                success: function(data){
                  console.log(data);
                  if (!data.meet_requirements) {
                    window.location.href = '/welcome'
                  }
                  if (data.success) {
                    $("#successReview").modal('show');
                  }
                  else if (!data.success) {
                    $("#failedReview").modal('show');                        
                    }
                },
                error: function(jqXHR, textStatus, errorThrown){
                  $("#failedReview").modal('show');
                }              
            });
        };

    const watchlist_btn = document.querySelector('#watchlist_button')
      // handle button click
    $("#watchlist_button_normal, #watchlist_button_mobile").click(function () {
        $.ajax({
            type: "POST",
            url: '/media/user/addwatchlist',
            dataType: "json",
            data: {media_id: media_details.mediaId},
            success: function(data){
              if (data.success) {
                if (data.removed) {
                  $('#watchlist_message').text('Successfully removed from watchlist.');
                  $('#watchlist_todo, #watchlist_todo_mobile').text('Add To Watchlist');
                }
                else {
                  $('#watchlist_message').text('Successfully added to watchlist.');
                  $('#watchlist_todo, #watchlist_todo_mobile').text('Remove From Watchlist');
                }
                  $("#successWatchlist").modal('show');
              }
              else {
                $("#failedWatchlist").modal('show');
              }
            },
            error: function(jqXHR, textStatus, errorThrown){
              console.log("FAILURE")
              console.log(errorThrown);
              $("#failedWatchlist").modal('show');

            }              
        });
    });

    $("#blocklist_button_normal, #blocklist_button_mobile").click(function () {
      $.ajax({
          type: "POST",
          url: '/media/user/addblocklist',
          dataType: "json",
          data: {media_id: media_details.mediaId},
          success: function(data){
            if (data.success) {
              if (data.removed) {
                $('#watchlist_message').text('Successfully removed from blocklist.');
                $('#blocklist_todo, #blocklist_todo_mobile').text('Add To Blocklist');
                $('#linktowatchlist').hide();
              }
              else {
                $('#watchlist_message').text('Successfully added to blocklist.');
                $('#blocklist_todo, #blocklist_todo_mobile').text('Remove From Blocklist');
                $('#linktowatchlist').hide();
              }
                $("#successWatchlist").modal('show');
            }
            else {
              $("#failedWatchlist").modal('show');
            }
          },
          error: function(jqXHR, textStatus, errorThrown){
            console.log("FAILURE")
            console.log(errorThrown);
            $("#failedWatchlist").modal('show');

          }              
      });
      });