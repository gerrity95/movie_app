extends layout

block content
  title What To Watch - Profile
  include includes/success_watchlist.pug
  include includes/failed_watchlist.pug
  - var reccs = media_info.reccomendations.recommendations
  if node_env == 'tv'
    - var idKey = 'tv_id'
    - var infoKey = 'tv_info'
    - var titleKey = 'name'
  else
    - var idKey = 'movie_id'
    - var infoKey = 'movie_info'
    - var titleKey = 'title'
  - var genres = genres
  
  .container-fluid
    .row.filter_genre_row
      .col-xl-3.col-lg-3.col-md-3.col-sm-6.col-6.offset-6.offset-sm-6.offset-md-9.offset.lg-9.offset-xl-9
        h5.white_text Filter By Genre
        select.form-control#genre_select
          option(value="all" selected="selected") All
          for genre in genres
            option(value=genre.id) #{genre.name}
    .row(style="margin-top: 30px")#movie_update

    .row#movie_default
     for media, index in reccs
        p
        - var mediaWeight = Math.round(media.weight * 10000) / 10000
        - var img_src = `https://image.tmdb.org/t/p/w500/${media[infoKey].poster_path}`
        .col-6.col-sm-4.col-md-4.col-lg-4.col-xl-3.offset-lg-0.offset-xl-0.offset-md-0.offset-sm-0.offset-0
          .product#product-desktop
            if index < 13
              .imgbox
                img(src=img_src)
            else
              .imgbox
                img.lazy(data-src=img_src)
            .specifies
              h2.white_text
                | #{media[infoKey][titleKey]}
                br
                span Rating: #{media[infoKey].vote_average} |
                if mediaWeight >= 70 
                  span.text-success  Weight: #{mediaWeight}%
                else if mediaWeight < 70 && mediaWeight > 40
                  span.text-info  Weight: #{mediaWeight}%
                else
                  span.text-warning  Weight: #{mediaWeight}%
              br
              ul
                li
                  .social-icons
                    a(id=`${media[idKey]}`).watchlist_button.social-icon_profile.social-icon--codepen
                      i.far.fa-bookmark.fa-stack-1x(style="color: white")
                      .tooltip#watchlist_todo Add To Watchlist
                    a(id=`${media[idKey]}`).blocklist_button.social-icon_profile.social-icon--codepen
                      i.far.fa-trash-alt.fa-stack-1x(style="color: white")
                      .tooltip Add To Blocklist
              label
              ul.colors
                //- li 
              a.btn.custom_button(href=`/media/${media[idKey]}`) Find Out More

          a#product-mobile(href=`/media/${media[idKey]}`)
            .product
              if index < 13
                .imgbox
                  img(src=img_src)
              else
                .imgbox
                  img.lazy(data-src=img_src)
              .specifies
                h2
                  | #{media[infoKey][titleKey]}
                  br
                  span Rating: #{media[infoKey].vote_average} | 
                  if mediaWeight >= 70 
                    span.text-success  Weight: #{mediaWeight}%
                  else if mediaWeight < 70 && mediaWeight > 40
                    span.text-info  Weight: #{mediaWeight}%
                  else
                    span.text-warning  Weight: #{mediaWeight}%

  .social-icons.profile_scroll_button
    a#scroll_button_profile.social-icon.social-icon--codepen.mx-auto(style="height: 50px;width:50px;background:#423268")
      i.fas.fa-arrow-up.fa-stack-1x(style="color: white") 


  script.
    var media_reccs = !{JSON.stringify(reccs)};
    var infoKey = !{JSON.stringify(infoKey)};
    var titleKey = !{JSON.stringify(titleKey)};
    var idKey = !{JSON.stringify(idKey)};
    console.log(media_reccs);
    var selected_medias = media_reccs;
    const scroll_btn = document.querySelector('#scroll_button_profile');
        // handle button click
        scroll_btn.onclick = function () {
          $('html,body').animate({
            scrollTop: 0}, 'slow');
        };

    $("#genre_select").change(function () {
        $("#movie_update").empty();
        $("#movie_default").empty();
        $("#movie_default").css('display', 'none');
        var selected_genre = this.value;
        if (selected_genre == 'all') {
          var selected_medias = media_reccs
        }
        else {
          var selected_medias = []
          for(i=0;i<media_reccs.length;i++) {
            if (media_reccs[i][infoKey].genre_ids.includes(parseInt(selected_genre))) {
              selected_medias.push(media_reccs[i]);
            }
          }
        }
        var update_div = document.getElementById('movie_update');
        if (selected_medias.length == 0) {
          var no_medias = document.createElement('div')
          no_medias.innerHTML = "<h2>Sorry. We couldn't find anything. ðŸ˜¥</h2><p>Not to worry though. If you would be interested to see more media of this type, start rating some of your favorites and then any ones we recommend will be sure to pop up!</p>";
          update_div.appendChild(no_medias);
        }
        else {
          for(i=0;i<selected_medias.length;i++) {
            var img_src = 'https://image.tmdb.org/t/p/w500/' + selected_medias[i][infoKey].poster_path;
            
            var products_container = document.createElement('div');
            products_container.classList.add("col-6", "col-sm-4", "col-md-4", "col-lg-4", "col-xl-3", "offset-lg-0", "offset-xl-0", "offset-md-0", "offset-sm-0", "offset-0")
            update_div.appendChild(products_container);
            
            // Structure for Desktop
            var product_desktop = document.createElement('div');
            product_desktop.setAttribute('id', 'product-desktop');
            product_desktop.classList.add("product");
            products_container.appendChild(product_desktop)
            var img_box = document.createElement('div');
            img_box.classList.add("imgbox");
            if (i < 12) {
              img_box.innerHTML = '<img src="' + img_src + '" />'            
            } else {
              img_box.innerHTML = '<img class="lazy" data-src="' + img_src + '" />'
            }
            product_desktop.appendChild(img_box);
            let specifies = document.createElement('div');
            specifies.classList.add("specifies");
            specifies.innerHTML = `<h2 class="white_text">${selected_medias[i][infoKey][titleKey]}<br><b>
                                  <span>Rating: ${selected_medias[i][infoKey].vote_average} | </span>
                                  <span>Weight: ${selected_medias[i].weight}</span>
                                  </b></h2><br><ul><li>
                                      <div class="social-icons">
                                        <a id=${selected_medias[i][idKey]} class="watchlist_button social-icon_profile social-icon--codepen"><i class="far fa-bookmark fa-stack-1x" style="color: white"></i>
                                        <div class="tooltip" id="watchlist_todo">Add To Watchlist</div></a>
                                        <a id=${selected_medias[i][idKey]} class="blocklist_button social-icon_profile social-icon--codepen" href="#"><i class="far fa-trash-alt fa-stack-1x" style="color: white"></i>
                                        <div class="tooltip">Add To Blocklist</div></a>
                                      </div>
                                  </li></ul><label></label><ul class="colors"></ul>
                                  <a class="btn custom_button" href="/media/${selected_medias[i][idKey]}">Find Out More</a>`
            
            product_desktop.appendChild(specifies);

            // Structure for Mobile
            var product_mobile = document.createElement('a');
            product_mobile.setAttribute('id', 'product-mobile')
            product_mobile.setAttribute('href', '/media/' + selected_medias[i][idKey]);
            product_mobile.innerHTML = `<div class="product">
                                        <div class="imgbox"><img src="${img_src}" /></div>
                                        <div class="specifies"><h2>${selected_medias[i][infoKey][titleKey]}<br><b>
                                        <span> Rating: ${selected_medias[i][infoKey].vote_average} | </span>
                                        <span>Weight: ${selected_medias[i].weight} </span></b></h2>
                                        </div></div>`;
            products_container.appendChild(product_mobile);
            
            
            

          }
        }
        // Trigger reload for lazy loading
        window.document.dispatchEvent(new Event("DOMContentLoaded", {
          bubbles: true,
          cancelable: true
        }));
    });

      // handle button click
    $(document).on('click', '.watchlist_button', function(event) {        
      $.ajax({
          type: "POST",
          url: '/media/user/addwatchlist',
          dataType: "json",
          data: {media_id: this.id},
          success: function(data){
            if (data.success) {
              if (data.removed) {
                $('#watchlist_message').text('Successfully removed from watchlist.');
                $('#watchlist_todo, #watchlist_todo_mobile').text('Add To Watchlist');
              }
              else {
                $('#watchlist_message').text('Successfully added to watchlist.');
                $('#watchlist_todo, #watchlist_todo_mobile').text('Remove From Watchlist');
              }
                $("#successWatchlist").modal('show');
            }
            else {
              $("#failedWatchlist").modal('show');
            }
          },
          error: function(jqXHR, textStatus, errorThrown){
            console.log("FAILURE")
            console.log(errorThrown);
            $("#failedWatchlist").modal('show');

          }              
      });
    });

    $(document).on('click', '.blocklist_button', function(event) {
      $.ajax({
          type: "POST",
          url: '/media/user/addblocklist',
          dataType: "json",
          data: {media_id: this.id},
          success: function(data){
            if (data.success) {
              if (data.removed) {
                $('#watchlist_message').text('Successfully removed from blocklist.');
                $('#watchlist_todo, #watchlist_todo_mobile').text('Add To Blocklist');
                $('#linktowatchlist').hide();
              }
              else {
                $('#watchlist_message').text('Successfully added to blocklist.');
                $('#watchlist_todo, #watchlist_todo_mobile').text('Remove From Blocklist');
                $('#linktowatchlist').hide();
              }
                $("#successWatchlist").modal('show');
                setInterval('location.reload()', 1000);
            }
            else {
              $("#failedWatchlist").modal('show');
            }
          },
          error: function(jqXHR, textStatus, errorThrown){
            console.log("FAILURE")
            console.log(errorThrown);
            $("#failedWatchlist").modal('show');

          }              
      });
    });

    //- document.addEventListener("DOMContentLoaded", function() {
    //-   var lazyloadImages;    

    //-   if ("IntersectionObserver" in window) {
    //-     lazyloadImages = document.querySelectorAll(".lazy");
    //-     var imageObserver = new IntersectionObserver(function(entries, observer) {
    //-       entries.forEach(function(entry) {
    //-         if (entry.isIntersecting) {
    //-           var image = entry.target;
    //-           image.src = image.dataset.src;
    //-           image.classList.remove("lazy");
    //-           imageObserver.unobserve(image);
    //-         }
    //-       });
    //-     });

    //-     lazyloadImages.forEach(function(image) {
    //-       imageObserver.observe(image);
    //-     });
    //-   } else {  
    //-     var lazyloadThrottleTimeout;
    //-     lazyloadImages = document.querySelectorAll(".lazy");
        
    //-     function lazyload () {
    //-       if(lazyloadThrottleTimeout) {
    //-         clearTimeout(lazyloadThrottleTimeout);
    //-       }    

    //-       lazyloadThrottleTimeout = setTimeout(function() {
    //-         var scrollTop = window.pageYOffset;
    //-         lazyloadImages.forEach(function(img) {
    //-             if(img.offsetTop < (window.innerHeight + scrollTop)) {
    //-               img.src = img.dataset.src;
    //-               img.classList.remove('lazy');
    //-             }
    //-         });
    //-         if(lazyloadImages.length == 0) { 
    //-           document.removeEventListener("scroll", lazyload);
    //-           window.removeEventListener("resize", lazyload);
    //-           window.removeEventListener("orientationChange", lazyload);
    //-         }
    //-       }, 20);
    //-     }

    //-     document.addEventListener("scroll", lazyload);
    //-     window.addEventListener("resize", lazyload);
    //-     window.addEventListener("orientationChange", lazyload);
    //-   }
    //- })  